{"version":3,"sources":["/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/$_lazy_route_resource lazy","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/app-routing/app-routing.module.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/app.component.html","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/app.component.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/app.module.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/button/button.component.css","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/button/button.component.html","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/button/button.component.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/date/date.component.css","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/date/date.component.html","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/date/date.component.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/dependentlist/dependentlist.component.css","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/dependentlist/dependentlist.component.html","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/dependentlist/dependentlist.component.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/dropdown/dropdown.component.css","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/dropdown/dropdown.component.html","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/dropdown/dropdown.component.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/range/range.component.css","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/range/range.component.html","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/range/range.component.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/text/text.component.css","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/text/text.component.html","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/text/text.component.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/textappend/textappend.component.html","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/textappend/textappend.component.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/textarea/textarea.component.css","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/textarea/textarea.component.html","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/textarea/textarea.component.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/textother/textother.component.html","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/textother/textother.component.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/toggle/toggle.component.css","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/toggle/toggle.component.html","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/toggle/toggle.component.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field/dynamic-form-field.component.html","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field/dynamic-form-field.component.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-section-types/list/list.component.css","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-section-types/list/list.component.html","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-section-types/list/list.component.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-section-types/tabbed/tabbed.component.css","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-section-types/tabbed/tabbed.component.html","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-section-types/tabbed/tabbed.component.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-section/dynamic-form-section.component.html","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-section/dynamic-form-section.component.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form/dynamic-form.component.html","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form/dynamic-form.component.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/designer/root/designer-root.component.css","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/designer/root/designer-root.component.html","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/designer/root/designer-root.component.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/models/df-form-section.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/models/df-form.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/models/form-field.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/services/dynamic-form-field-control.service.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/services/dynamic-form-field.service.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/services/dynamic-form-section.service.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/services/dynamic-form.service.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/environments/environment.ts","/Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DynamicFormComponent } from '../components/dynamic-form/dynamic-form.component';\nimport { DesignerRootComponent } from '../designer/root/designer-root.component';\n\nconst routes: Routes = [\n    { path: '', redirectTo: '/form', pathMatch: 'full' },\n    { path: 'form', component: DynamicFormComponent },\n    { path: 'designer', component: DesignerRootComponent }\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  declarations: [],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/app-routing/app-routing.module.ts","module.exports = \"<div class=\\\"container\\\">\\n    <h1 class=\\\"text-left\\\">{{ 'fbt_dynamic_forms' | translate }}</h1>\\n    <h6 class=\\\"text-right\\\"><i> v1.0 </i></h6>\\n    <hr>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit }       from '@angular/core';\n\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { DynamicFormFieldService } from './services/dynamic-form-field.service';\nimport { DynamicFormSectionService } from './services/dynamic-form-section.service';\nimport { DynamicFormService } from './services/dynamic-form.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    providers: [ DynamicFormFieldService, DynamicFormSectionService, DynamicFormService ]\n})\nexport class AppComponent implements OnInit{\n\n    dynamicForm: any;\n\n    constructor(private translate: TranslateService, private dynamicFormService: DynamicFormService) { }\n\n    ngOnInit() {\n        // this.dynamicFormService.initForm();\n        // this.dynamicForm = this.dynamicFormService.getForm();\n        this.handleTranslations();\n    }\n    \n    handleTranslations() {\n        // this language will be used as a fallback when a translation isn't found in the current language\n        this.translate.setDefaultLang('en');\n    \n        // the lang to use, if the lang isn't available, it will use the current loader to get them\n        this.translate.use('en');\n    \n        let browserLang = this.translate.getBrowserLang();\n        this.translate.use(browserLang.match(/en|fr/) ? browserLang : 'en');\n    }\n\n}\n \n\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/app.component.ts","import { LOCALE_ID, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { AppRoutingModule } from './app-routing/app-routing.module';\n\nimport { DynamicFormService } from './services/dynamic-form.service';\n\nimport { AppComponent } from './app.component';\nimport { DynamicFormComponent } from './components/dynamic-form/dynamic-form.component';\nimport { DesignerRootComponent } from './designer/root/designer-root.component';\nimport { DynamicFormFieldComponent } from './components/dynamic-form-field/dynamic-form-field.component';\nimport { TextComponent } from './components/dynamic-form-field-types/text/text.component';\nimport { TextAreaComponent } from './components/dynamic-form-field-types/textarea/textarea.component';\nimport { DropdownComponent } from './components/dynamic-form-field-types/dropdown/dropdown.component';\nimport { DateComponent } from './components/dynamic-form-field-types/date/date.component';\nimport { RangeComponent } from './components/dynamic-form-field-types/range/range.component';\nimport { ButtonComponent } from './components/dynamic-form-field-types/button/button.component';\nimport { ToggleComponent } from './components/dynamic-form-field-types/toggle/toggle.component'\nimport { DynamicFormSectionComponent } from './components/dynamic-form-section/dynamic-form-section.component';\nimport { SectionTabbedComponent } from './components/dynamic-form-section-types/tabbed/tabbed.component';\nimport { SectionListComponent } from './components/dynamic-form-section-types/list/list.component';\nimport { DependentListComponent } from './components/dynamic-form-field-types/dependentlist/dependentlist.component';\nimport { TextAppendComponent } from './components/dynamic-form-field-types/textappend/textappend.component';\nimport { TextOtherComponent } from './components/dynamic-form-field-types/textother/textother.component';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n    imports : [ \n        BrowserModule, \n        ReactiveFormsModule ,\n        AppRoutingModule,\n        HttpModule,\n        HttpClientModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [ HttpClient ]\n            }\n        })\n    ],\n    declarations : [ \n        AppComponent, \n        DynamicFormComponent, \n        DynamicFormFieldComponent, \n        TextComponent,\n        TextAreaComponent,\n        DropdownComponent,\n        DateComponent, \n        RangeComponent,\n        ButtonComponent, \n        ToggleComponent,\n        DynamicFormSectionComponent, \n        SectionTabbedComponent, \n        SectionListComponent, \n        DesignerRootComponent,\n        DependentListComponent,\n        TextAppendComponent,\n        TextOtherComponent,\n        \n    ],\n    bootstrap : [ \n        AppComponent \n    ],\n    providers : [\n        DynamicFormService\n    ]\n})\n\nexport class AppModule {\n    constructor() {}\n}\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/app.module.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* */\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/button/button.component.css\n// module id = ../../../../../src/app/components/dynamic-form-field-types/button/button.component.css\n// module chunks = main","module.exports = \"<div [formGroup]=\\\"dfForm\\\">\\n    <button \\n        class=\\\"form-control btn btn-primary\\\" \\n        type=\\\"button\\\"\\n        (click)=\\\"onClick()\\\"\\n        [id]=\\\"dfFormField.key\\\" \\n        [name]=\\\"dfFormField.key\\\"\\n        [disabled]=\\\"dfFormField.disabled\\\">\\n        {{ dfFormField.label }}\\n    </button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/button/button.component.html\n// module id = ../../../../../src/app/components/dynamic-form-field-types/button/button.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup }        from '@angular/forms';\n\nimport { FormField }     from '../../../models/form-field';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.css']\n})\nexport class ButtonComponent implements OnInit {\n\n    @Input() dfForm: FormGroup;\n    @Input() dfFormField: FormField;\n\n    constructor() { }\n\n    ngOnInit() {\n\n    }\n\n    onClick() {\n        console.log(this.dfFormField, this.dfForm);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/button/button.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* */\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/date/date.component.css\n// module id = ../../../../../src/app/components/dynamic-form-field-types/date/date.component.css\n// module chunks = main","module.exports = \"<div [formGroup]=\\\"dfForm\\\">\\n    <input \\n        class=\\\"form-control\\\" \\n        type=\\\"date\\\"\\n        [id]=\\\"dfFormField.key\\\" \\n        [name]=\\\"dfFormField.key\\\"\\n        [formControlName]=\\\"dfFormField.key\\\" />\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/date/date.component.html\n// module id = ../../../../../src/app/components/dynamic-form-field-types/date/date.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup }        from '@angular/forms';\n\nimport { FormField }     from '../../../models/form-field';\n\n@Component({\n  selector: 'app-date',\n  templateUrl: './date.component.html',\n  styleUrls: ['./date.component.css']\n})\nexport class DateComponent implements OnInit {\n\n    @Input() dfForm: FormGroup;\n    @Input() dfFormField: FormField;\n    \n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/date/date.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* */\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/dependentlist/dependentlist.component.css\n// module id = ../../../../../src/app/components/dynamic-form-field-types/dependentlist/dependentlist.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\" [formGroup]=\\\"dfForm\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <select \\n            class=\\\"form-control\\\" \\n            style=\\\"width: 100%;\\\"  \\n            (change)=\\\"onSelectMaster()\\\" \\n            [id]=\\\"dfFormField.key1\\\"\\n            [name]=\\\"dfFormField.key1\\\"\\n            [formControlName]=\\\"dfFormField.key\\\">\\n                <option value=\\\"\\\" disabled selected>Select</option>\\n                <option \\n                    *ngFor=\\\"let masterOption of masterOptions\\\" \\n                    [ngValue]=\\\"masterOption.key\\\">\\n                        {{ masterOption.value }}\\n                </option>\\n        </select>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <select \\n            class=\\\"form-control\\\" \\n            style=\\\"width: 100%;\\\" \\n            [id]=\\\"dfFormField.key\\\"\\n            [name]=\\\"dfFormField.key\\\"\\n            [formControlName]=\\\"dfFormField.key\\\">\\n                <option value=\\\"\\\" disabled selected>Select</option>\\n                <option \\n                    *ngFor=\\\"let option of options\\\" \\n                    [ngValue]=\\\"option.key\\\">\\n                        {{ option.value }}\\n                </option>\\n        </select>\\n    </div>\\n</div>\\n    \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/dependentlist/dependentlist.component.html\n// module id = ../../../../../src/app/components/dynamic-form-field-types/dependentlist/dependentlist.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Event } from '@angular/router/src/events';\n\nimport { FormField } from '../../../models/form-field';\n\nimport { DynamicFormService } from '../../../services/dynamic-form.service';\n\n@Component({\n    selector: 'app-dependentlist',\n    templateUrl: './dependentlist.component.html',\n    styleUrls: ['./dependentlist.component.css']\n})\nexport class DependentListComponent implements OnInit {\n\n    @Input() dfForm: FormGroup;\n    @Input() dfFormField: FormField;\n\n    masterOptions = [];\n    options = [];\n\n    constructor(private dynamicFormService: DynamicFormService) { }\n\n    ngOnInit() { \n        this.masterOptions = this.dynamicFormService.getFormControlMasterMetadataJson();\n    }\n\n    onSelectMaster() {\n        console.log(this.dfForm.value.dc_dependent);\n        this.options = this.dynamicFormService.getFormControlMetadataJson(this.dfForm.value.dc_dependent);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/dependentlist/dependentlist.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* */\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/dropdown/dropdown.component.css\n// module id = ../../../../../src/app/components/dynamic-form-field-types/dropdown/dropdown.component.css\n// module chunks = main","module.exports = \"<div [formGroup]=\\\"dfForm\\\">\\n    <select \\n        class=\\\"form-control\\\" \\n        [id]=\\\"dfFormField.key\\\"\\n        [name]=\\\"dfFormField.key\\\"\\n        [formControlName]=\\\"dfFormField.key\\\">\\n            <option \\n                *ngFor=\\\"let option of dfFormField.selectorControl.options\\\" \\n                [ngValue]=\\\"option.key\\\">\\n                    {{ option.value }}\\n            </option>\\n    </select>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/dropdown/dropdown.component.html\n// module id = ../../../../../src/app/components/dynamic-form-field-types/dropdown/dropdown.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup }        from '@angular/forms';\n\nimport { FormField }     from '../../../models/form-field';\n\n@Component({\n  selector: 'app-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.css']\n})\nexport class DropdownComponent implements OnInit {\n\n    @Input() dfForm: FormGroup;\n    @Input() dfFormField: FormField;\n\n    constructor() { }\n\n    ngOnInit() {\n        \n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/dropdown/dropdown.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* */\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/range/range.component.css\n// module id = ../../../../../src/app/components/dynamic-form-field-types/range/range.component.css\n// module chunks = main","module.exports = \"<div [formGroup]=\\\"dfForm\\\">\\n    <input \\n        class=\\\"form-control\\\" \\n        type=\\\"range\\\"\\n        [id]=\\\"dfFormField.key\\\" \\n        [name]=\\\"dfFormField.key\\\"\\n        [formControlName]=\\\"dfFormField.key\\\" />\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/range/range.component.html\n// module id = ../../../../../src/app/components/dynamic-form-field-types/range/range.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup }        from '@angular/forms';\n\nimport { FormField }     from '../../../models/form-field';\n\n@Component({\n  selector: 'app-range',\n  templateUrl: './range.component.html',\n  styleUrls: ['./range.component.css']\n})\nexport class RangeComponent implements OnInit {\n\n    @Input() dfForm: FormGroup;\n    @Input() dfFormField: FormField;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/range/range.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* */\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/text/text.component.css\n// module id = ../../../../../src/app/components/dynamic-form-field-types/text/text.component.css\n// module chunks = main","module.exports = \"<div [formGroup]=\\\"dfForm\\\">\\n    <input \\n        class=\\\"form-control\\\" \\n        type=\\\"text\\\"\\n        disabled=\\\"dfFormField.disabled\\\"\\n        [id]=\\\"dfFormField.key\\\" \\n        [name]=\\\"dfFormField.key\\\"\\n        [formControlName]=\\\"dfFormField.key\\\" />\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/text/text.component.html\n// module id = ../../../../../src/app/components/dynamic-form-field-types/text/text.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormField } from '../../../models/form-field';\n\n@Component({\n  selector: 'app-text',\n  templateUrl: './text.component.html',\n  styleUrls: ['./text.component.css']\n})\nexport class TextComponent implements OnInit {\n\n    @Input() dfForm: FormGroup;\n    @Input() dfFormField: FormField;\n\n    constructor() { }\n\n    ngOnInit() {\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/text/text.component.ts","module.exports = \"<div class=\\\"row\\\" [formGroup]=\\\"dfForm\\\" >\\n    <div class=\\\"col-md-6\\\">\\n        <select \\n            class=\\\"form-control\\\"\\n            style=\\\"width: 100%;\\\"\\n            (change)=\\\"changecat(null)\\\" \\n            [id]=\\\"dfFormField.key1\\\"\\n            [name]=\\\"dfFormField.key\\\"\\n            [formControlName]=\\\"dfFormField.key\\\">\\n                <option\\n                    *ngFor=\\\"let masterOption of masterOptions\\\" \\n                    [ngValue]=\\\"masterOption.key\\\">\\n                        {{ masterOption.value }}\\n                </option>\\n        </select>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <input \\n            class=\\\"form-control\\\"\\n            style=\\\"width: 100%;\\\"\\n            type=\\\"text\\\" \\n            value={{suffix}}>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/textappend/textappend.component.html\n// module id = ../../../../../src/app/components/dynamic-form-field-types/textappend/textappend.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup }        from '@angular/forms';\n\nimport { FormField }     from '../../../models/form-field';\nimport { Event } from '@angular/router/src/events';\n\n@Component({\n  selector: 'app-textappend',\n  templateUrl: './textappend.component.html',\n  //styleUrls: ['./textappend.component.css']\n})\nexport class TextAppendComponent implements OnInit {\n\n    @Input() dfForm: FormGroup;\n    @Input() dfFormField: FormField;\n\n    suffix=\"<name>\";\n    masterOptions = [\n      { key: 'Mr.', value: 'Mr.' }, \n      { key: 'Mrs.', value: 'Mrs.' },\n      { key: 'Miss', value: 'Miss' }, \n    ];\n\n    constructor() { }\n\n    ngOnInit() { }\n\n    changecat(value:HTMLSelectElement) {\n      this.suffix = this.dfForm.value.dc_textappend + \" \" + this.suffix;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/textappend/textappend.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* */\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/textarea/textarea.component.css\n// module id = ../../../../../src/app/components/dynamic-form-field-types/textarea/textarea.component.css\n// module chunks = main","module.exports = \"<div [formGroup]=\\\"dfForm\\\">\\n    <textarea \\n        class=\\\"form-control\\\" \\n        [rows]=\\\"dfFormField.rows\\\"\\n        [id]=\\\"dfFormField.key\\\" \\n        [name]=\\\"dfFormField.key\\\"\\n        [formControlName]=\\\"dfFormField.key\\\">\\n    </textarea>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/textarea/textarea.component.html\n// module id = ../../../../../src/app/components/dynamic-form-field-types/textarea/textarea.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup }        from '@angular/forms';\n\nimport { FormField }     from '../../../models/form-field';\n\n@Component({\n  selector: 'app-textarea',\n  templateUrl: './textarea.component.html',\n  styleUrls: ['./textarea.component.css']\n})\nexport class TextAreaComponent implements OnInit {\n\n    @Input() dfForm: FormGroup;\n    @Input() dfFormField: FormField;\n\n    constructor() { }\n\n    ngOnInit() {\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/textarea/textarea.component.ts","module.exports = \"<div class=\\\"row\\\" [formGroup]=\\\"dfForm\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <select \\n            class=\\\"form-control\\\"\\n            style=\\\"width: 100%;\\\"\\n            (change)=\\\"changecat(null)\\\" \\n            [id]=\\\"dfFormField.getKey()\\\"\\n            [name]=\\\"dfFormField.getKey()\\\"\\n            [formControlName]=\\\"dfFormField.getKey()\\\">\\n                <!-- <option value=\\\"\\\" disabled selected>Select</option>\\n                    <option value=\\\"BTech\\\">BTech</option>\\n                    <option value=\\\"BSc\\\">BSc</option>\\n                    <option value=\\\"BPharm\\\">BPharm</option>\\n                    <option value=\\\"Other\\\">Other</option> -->\\n                <option \\n                    *ngFor=\\\"let masterOption of masterOptions\\\" \\n                    [ngValue]=\\\"masterOption.key\\\">\\n                        {{ masterOption.value }}\\n                </option>\\n        </select>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <input \\n            class=\\\"form-control\\\" \\n            style=\\\"width: 100%;\\\" \\n            type={{needed}}>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/textother/textother.component.html\n// module id = ../../../../../src/app/components/dynamic-form-field-types/textother/textother.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { DynamicFormService } from '../../../services/dynamic-form.service';\nimport { FormField } from '../../../models/form-field';\nimport { Event } from '@angular/router/src/events';\n\n@Component({\n  selector: 'app-textother',\n  templateUrl: './textother.component.html',\n  //styleUrls: ['./textappend.component.css']\n})\nexport class TextOtherComponent implements OnInit {\n\n    @Input() dfForm: FormGroup;\n    @Input() dfFormField: FormField;\n\n    needed = \"hidden\";\n    masterOptions = [];\n\n    constructor(private dynamicFormService: DynamicFormService) { }\n\n    ngOnInit() {\n        this.masterOptions = this.dynamicFormService.getOtherList();\n    }\n\n    changecat(value:HTMLSelectElement) {\n      console.log(this.dfForm.value.dc_textother);\n      if (this.dfForm.value.dc_textother==\"Other\")\n        {\n            this.needed=\"text\";\n            console.log(this.needed);\n            //var element = document.createElement(\"input\");\n           // var foo = document.getElementById(\"abc\");\n            //foo.appendChild(element);\n            //document.getElementById(\"abc\").innerHTML=\"<input type='text' value=''>\";\n\n            \n            \n        }\n\n\n\n      \n      \n\n      \n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/textother/textother.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* */\\n.switch {\\n    position: relative;\\n    display: inline-block;\\n    width: 60px;\\n    height: 34px;\\n}\\n.switch input {display:none;}\\n.slider {\\n    position: absolute;\\n    cursor: pointer;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background-color: #ccc;\\n    -webkit-transition: .4s;\\n    transition: .4s;\\n}\\n.slider:before {\\n    position: absolute;\\n    content: \\\"\\\";\\n    height: 26px;\\n    width: 26px;\\n    left: 4px;\\n    bottom: 4px;\\n    background-color: white;\\n    -webkit-transition: .15s;\\n    transition: .15s;\\n}\\ninput:checked + .slider {\\n    background-color: #2196F3;\\n}\\ninput:focus + .slider {\\n    -webkit-box-shadow: 0 0 1px #2196F3;\\n            box-shadow: 0 0 1px #2196F3;\\n}\\ninput:checked + .slider:before {\\n    -webkit-transform: translateX(26px);\\n    transform: translateX(26px);\\n}\\n/* Rounded sliders */\\n.slider.round {\\n    border-radius: 4px;\\n}\\n.slider.round:before {\\n    border-radius: 4px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/toggle/toggle.component.css\n// module id = ../../../../../src/app/components/dynamic-form-field-types/toggle/toggle.component.css\n// module chunks = main","module.exports = \"<div [formGroup]=\\\"dfForm\\\">\\n    <label class=\\\"switch\\\">\\n        <input \\n            class=\\\"form-control\\\" \\n            type=\\\"checkbox\\\"\\n            [id]=\\\"dfFormField.key\\\" \\n            [name]=\\\"dfFormField.key\\\"\\n            [formControlName]=\\\"dfFormField.key\\\" />\\n        <span class=\\\"slider round\\\"></span>\\n    </label>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/toggle/toggle.component.html\n// module id = ../../../../../src/app/components/dynamic-form-field-types/toggle/toggle.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup }        from '@angular/forms';\n\nimport { FormField }     from '../../../models/form-field';\n\n@Component({\n  selector: 'app-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.css']\n})\nexport class ToggleComponent implements OnInit {\n\n    @Input() dfForm: FormGroup;\n    @Input() dfFormField: FormField;\n\n    constructor() { }\n\n    ngOnInit() {\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field-types/toggle/toggle.component.ts","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div \\n            class=\\\"form-group\\\"\\n            [ngSwitch]=\\\"dynamicFormField.type\\\"\\n            [formGroup]=\\\"dfFormGroup\\\">\\n\\n            <label [for]=\\\"dynamicFormField.key\\\">{{ dynamicFormField.label }}</label>\\n\\n            <app-text \\n                *ngSwitchCase=\\\"'TEXT'\\\" \\n                [dfForm]=\\\"dfFormGroup\\\"\\n                [dfFormField]=\\\"dynamicFormField\\\">\\n            </app-text>\\n\\n            <app-dropdown \\n                *ngSwitchCase=\\\"'DROPDOWN'\\\" \\n                [dfForm]=\\\"dfFormGroup\\\"\\n                [dfFormField]=\\\"dynamicFormField\\\">\\n            </app-dropdown>\\n\\n            <app-date \\n                *ngSwitchCase=\\\"'DATE'\\\" \\n                [dfForm]=\\\"dfFormGroup\\\"\\n                [dfFormField]=\\\"dynamicFormField\\\">\\n            </app-date>\\n\\n            <app-range \\n                *ngSwitchCase=\\\"'RANGE'\\\" \\n                [dfForm]=\\\"dfFormGroup\\\"\\n                [dfFormField]=\\\"dynamicFormField\\\">\\n            </app-range>\\n\\n            <app-textarea \\n                *ngSwitchCase=\\\"'TEXTAREA'\\\" \\n                [dfForm]=\\\"dfFormGroup\\\"\\n                [dfFormField]=\\\"dynamicFormField\\\">\\n            </app-textarea>\\n\\n            <app-button \\n                *ngSwitchCase=\\\"'BUTTON'\\\" \\n                [dfForm]=\\\"dfFormGroup\\\"\\n                [dfFormField]=\\\"dynamicFormField\\\">\\n            </app-button>\\n\\n            <app-toggle \\n                *ngSwitchCase=\\\"'TOGGLE'\\\" \\n                [dfForm]=\\\"dfFormGroup\\\"\\n                [dfFormField]=\\\"dynamicFormField\\\">\\n            </app-toggle>\\n\\n            <app-dependentlist \\n                *ngSwitchCase=\\\"'DEPENDENTLIST'\\\" \\n                [dfForm]=\\\"dfFormGroup\\\"\\n                [dfFormField]=\\\"dynamicFormField\\\">\\n            </app-dependentlist>\\n\\n            <app-textappend \\n                *ngSwitchCase=\\\"'TEXTAPPEND'\\\" \\n                [dfForm]=\\\"dfFormGroup\\\"\\n                [dfFormField]=\\\"dynamicFormField\\\">\\n            </app-textappend>\\n\\n            <app-textother \\n                *ngSwitchCase=\\\"'TEXTOTHER'\\\" \\n                [dfForm]=\\\"dfFormGroup\\\"\\n                [dfFormField]=\\\"dynamicFormField\\\">\\n            </app-textother>\\n\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field/dynamic-form-field.component.html\n// module id = ../../../../../src/app/components/dynamic-form-field/dynamic-form-field.component.html\n// module chunks = main","import { Component, Input } from '@angular/core';\nimport { FormGroup }        from '@angular/forms';\n\nimport { FormField }     from '../../models/form-field';\n\n@Component({\n    selector: 'df-form-field',\n    templateUrl: './dynamic-form-field.component.html'\n})\nexport class DynamicFormFieldComponent{\n\n    @Input() dfFormGroup: FormGroup;\n    @Input() dynamicFormField: FormField;\n\n    /*get isValid() { \n        return this.dfForm.controls[this.dfFormfield.key].valid; \n    }*/\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-field/dynamic-form-field.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-section-types/list/list.component.css\n// module id = ../../../../../src/app/components/dynamic-form-section-types/list/list.component.css\n// module chunks = main","module.exports = \"<div\\n    *ngFor=\\\"let dynamicFormSection of dynamicForm.getSections()\\\">\\n    <app-dynamic-form-section \\n        [dynamicFormSection]=\\\"dynamicFormSection\\\" \\n        [dfFormGroup]=\\\"dfFormGroup\\\">\\n    </app-dynamic-form-section>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-section-types/list/list.component.html\n// module id = ../../../../../src/app/components/dynamic-form-section-types/list/list.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { DynamicForm } from '../../../models/df-form';\nimport { DynamicFormSection } from '../../../models/df-form-section';\n\n@Component({\n  selector: 'app-section-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class SectionListComponent implements OnInit {\n\n  @Input() dynamicForm: DynamicForm;\n  @Input() dynamicFormSection: DynamicFormSection;\n  @Input() dfFormGroup: FormGroup;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-section-types/list/list.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-section-types/tabbed/tabbed.component.css\n// module id = ../../../../../src/app/components/dynamic-form-section-types/tabbed/tabbed.component.css\n// module chunks = main","module.exports = \"<ul class=\\\"nav nav-pills\\\">\\n    <li \\n        *ngFor=\\\"let dynamicFormSection of dynamicForm.getSections(); let i = index\\\"\\n        role=\\\"presentation\\\"\\n        class=\\\"nav-link {{ i == selectedSectionIndex ? 'active' : '' }}\\\"\\n        style=\\\"cursor: pointer;\\\"\\n        (click)=\\\"selectSection(i)\\\">\\n        {{ dynamicFormSection.label }}\\n    </li>\\n</ul>\\n<app-dynamic-form-section \\n    [dynamicFormSection]=\\\"dynamicForm.getSection(selectedSectionIndex)\\\" \\n    [dfFormGroup]=\\\"dfFormGroup\\\">\\n</app-dynamic-form-section>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-section-types/tabbed/tabbed.component.html\n// module id = ../../../../../src/app/components/dynamic-form-section-types/tabbed/tabbed.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { DynamicForm } from '../../../models/df-form';\nimport { DynamicFormSection } from '../../../models/df-form-section';\n\n@Component({\n  selector: 'app-section-tabbed',\n  templateUrl: './tabbed.component.html',\n  styleUrls: ['./tabbed.component.css']\n})\nexport class SectionTabbedComponent implements OnInit {\n\n  @Input() dynamicForm: DynamicForm;\n  @Input() dynamicFormSection: DynamicFormSection;\n  @Input() dfFormGroup: FormGroup;\n  selectedSectionIndex: Number;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.selectedSectionIndex = this.selectedSectionIndex ? this.selectedSectionIndex : 0;\n  }\n\n  selectSection(i) {\n    this.selectedSectionIndex = i;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-section-types/tabbed/tabbed.component.ts","module.exports = \"<div class=\\\"card\\\">\\n    <div \\n        class=\\\"card-header card-info\\\" \\n        style=\\\"cursor: pointer; color: white;\\\" \\n        (click)=\\\"toggleSectionDisplay()\\\">\\n            {{ dynamicFormSection.label | translate }}\\n    </div>\\n    <div class=\\\"card-block\\\" *ngIf=\\\"displaySection\\\">\\n        <div *ngFor=\\\"let dynamicFormField of dynamicFormSection.getFields()\\\">\\n            <df-form-field [dynamicFormField]=\\\"dynamicFormField\\\" [dfFormGroup]=\\\"dfFormGroup\\\"></df-form-field>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-section/dynamic-form-section.component.html\n// module id = ../../../../../src/app/components/dynamic-form-section/dynamic-form-section.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { DynamicFormSection} from '../../models/df-form-section';\n\n@Component({\n  selector: 'app-dynamic-form-section',\n  templateUrl: './dynamic-form-section.component.html'\n})\nexport class DynamicFormSectionComponent implements OnInit {\n\n    @Input() dynamicFormSection: DynamicFormSection;\n    @Input() dfFormGroup: FormGroup;\n    displaySection: Boolean = true;\n\n    constructor() { }\n\n    ngOnInit() {\n        this.displaySection = this.dynamicFormSection.getVisible();\n    }\n\n    toggleSectionDisplay() {\n        this.displaySection = !this.displaySection;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form-section/dynamic-form-section.component.ts","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <h3 class=\\\"text-left\\\"> Form </h3>\\n        <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"dfFormGroup\\\">\\n\\n            <div\\n                [ngSwitch]=\\\"sectionDisplayType\\\">\\n\\n                <div\\n                    *ngSwitchCase=\\\"'TABBED'\\\">\\n                    <app-section-tabbed\\n                        [dynamicForm]=\\\"dynamicForm\\\"\\n                        [dynamicFormSection]=\\\"dynamicFormSection\\\" \\n                        [dfFormGroup]=\\\"dfFormGroup\\\">\\n                    </app-section-tabbed>\\n                </div>\\n\\n                <div\\n                    *ngSwitchCase=\\\"'LIST'\\\">\\n                    <app-section-list\\n                        [dynamicForm]=\\\"dynamicForm\\\"\\n                        [dynamicFormSection]=\\\"dynamicFormSection\\\" \\n                        [dfFormGroup]=\\\"dfFormGroup\\\">\\n                    </app-section-list>\\n                </div>\\n                \\n            </div>\\n\\n            <hr>\\n\\n            <button \\n                type=\\\"submit\\\"\\n                class=\\\"btn btn-info\\\">\\n                Submit\\n            </button>\\n        </form>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form/dynamic-form.component.html\n// module id = ../../../../../src/app/components/dynamic-form/dynamic-form.component.html\n// module chunks = main","import { Component, OnInit }  from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Response } from \"@angular/http\";\n\nimport { DynamicForm } from '../../models/df-form';\n\nimport { DynamicFormFieldControlService } from '../../services/dynamic-form-field-control.service';\nimport { DynamicFormService } from '../../services/dynamic-form.service';\n\n@Component({\n    selector: 'dynamic-form',\n    templateUrl: './dynamic-form.component.html',\n    providers: [ DynamicFormFieldControlService ]\n})\nexport class DynamicFormComponent implements OnInit {\n\n    dynamicForm: DynamicForm; \n    dfFormGroup: FormGroup = new FormGroup({});\n    sectionDisplayType: String;\n\n    constructor(private dynamicFormService: DynamicFormService, private formFieldControlService: DynamicFormFieldControlService) {  }\n\n    ngOnInit() {\n        this.dynamicFormService.getFormMetadataJson()\n            .subscribe((resp: Response) => {\n                const metadata = resp.json();\n                this.dynamicFormService.initForm(metadata);\n                this.dynamicForm = this.dynamicFormService.getForm();\n                this.initSections();\n            }, (err) => {\n                console.error(err);\n            });\n    }\n    \n    initSections() {\n        const sections = this.dynamicForm.getSections();\n        this.dfFormGroup = this.formFieldControlService.getFormGroups(sections);\n        this.sectionDisplayType = 'LIST'; // TABBED, LIST;\n    }\n\n    onSubmit() {\n        console.log(this.dfFormGroup.value);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/components/dynamic-form/dynamic-form.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".right{\\n    position: absolute;\\n    width:50%;\\n    height:900px;\\n    right: 0px;\\n}\\n\\n.row{\\n    position: absolute;\\n    width:50%;\\n    height:900px;\\n    left: 0px;\\n\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/designer/root/designer-root.component.css\n// module id = ../../../../../src/app/designer/root/designer-root.component.css\n// module chunks = main","module.exports = \"<h3 class=\\\"text-left\\\"> Designer </h3>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"form-group\\\">\\n            <label [for]=\\\"dynamicFormFieldTextArea.key\\\">{{ dynamicFormFieldTextArea.label }}</label>\\n\\n            <button \\n                class=\\\"form-control btn btn-primary\\\" \\n                type=\\\"button\\\"\\n                id=\\\"submitMetadata\\\" \\n                name=\\\"submitMetadata\\\"\\n                (click)=\\\"onNewSection()\\\">\\n                    Add New Section\\n            </button>\\n\\n            <button \\n                class=\\\"form-control btn btn-primary\\\" \\n                type=\\\"button\\\"\\n                id=\\\"submitMetadata\\\" \\n                name=\\\"submitMetadata\\\"\\n                (click)=\\\"onNewDropdown()\\\">\\n                    Add New Dropdown\\n            </button>\\n            <button \\n                class=\\\"form-control btn btn-primary\\\" \\n                type=\\\"button\\\"\\n                id=\\\"submitMetadata\\\" \\n                name=\\\"submitMetadata\\\"\\n                (click)=\\\"onNewDate()\\\">\\n                    Add New Date\\n            </button>\\n            <button \\n                class=\\\"form-control btn btn-primary\\\" \\n                type=\\\"button\\\"\\n                id=\\\"submitMetadata\\\" \\n                name=\\\"submitMetadata\\\"\\n                (click)=\\\"onNewRange()\\\">\\n                    Add New Range\\n            </button>\\n            <button \\n                class=\\\"form-control btn btn-primary\\\" \\n                type=\\\"button\\\"\\n                id=\\\"submitMetadata\\\" \\n                name=\\\"submitMetadata\\\"\\n                (click)=\\\"onNewText()\\\">\\n                    Add New Text Field\\n            </button>\\n            <button \\n                class=\\\"form-control btn btn-primary\\\" \\n                type=\\\"button\\\"\\n                id=\\\"submitMetadata\\\" \\n                name=\\\"submitMetadata\\\"\\n                (click)=\\\"onNewToggle()\\\">\\n                    Add New Toggle Button\\n            </button>\\n            <button \\n                class=\\\"form-control btn btn-primary\\\" \\n                type=\\\"button\\\"\\n                id=\\\"submitMetadata\\\" \\n                name=\\\"submitMetadata\\\"\\n                (click)=\\\"onNewDependent()\\\">\\n                    Add New Dependent List\\n            </button>\\n            <button \\n                class=\\\"form-control btn btn-primary\\\" \\n                type=\\\"button\\\"\\n                id=\\\"submitMetadata\\\" \\n                name=\\\"submitMetadata\\\"\\n                (click)=\\\"onNewOther()\\\">\\n                    Add New List with Other\\n            </button>\\n\\n            <div [formGroup]=\\\"dfFormGroup\\\" *ngIf=\\\"wantnewsection==true\\\">\\n                <br><br>\\n               \\n                Name: <input class=\\\"form-control\\\" formControlName=\\\"t1\\\" type=\\\"text\\\"><br><br>\\n                Collapsed: <input id=\\\"section_collapsed\\\" type=\\\"checkbox\\\">\\n                <br><br>\\n                <!-- Type: <input id=\\\"t2\\\" type='text'><br> -->\\n                <br><br><br><br><br><br>\\n                \\n                    <button \\n                    class=\\\"form-control btn btn-primary\\\" \\n                    type=\\\"button\\\"\\n                    id=\\\"submitMetadata\\\" \\n                    name=\\\"submitMetadata\\\"\\n                    (click)=\\\"onNewSectionCreate()\\\">\\n                        CREATE\\n                </button>\\n            </div>\\n\\n            <div [formGroup]=\\\"dfFormGroup\\\" *ngIf=\\\"wantnewdropdown==true\\\">\\n                    <br><br>\\n                    Section: \\n                    <select \\n                    class=\\\"form-control\\\" \\n                    style=\\\"width: 100%;\\\"  \\n                    formControlName=\\\"sectionno\\\"\\n                    (change)=\\\"onSectionSelectChanged()\\\" \\n                    \\n                    >\\n                        <option value=\\\"\\\" disabled selected>Select</option>\\n                        <option \\n                            *ngFor=\\\"let opt of Options\\\" \\n                            [ngValue]=\\\"opt.key\\\">\\n                                {{ opt.value }}\\n                        </option>\\n                </select><br><br>\\n                    <!-- Type: <input id=\\\"t2\\\" type='text'><br> -->\\n                    <br><br><br><br><br><br>\\n                    Key: <input class=\\\"form-control\\\" formControlName=\\\"custom_key\\\" type=\\\"text\\\"><br>\\n                    Item: <input class=\\\"form-control\\\" formControlName=\\\"dropdownitem\\\" type=\\\"text\\\"><br><br>\\n                \\n                    <button \\n                        class=\\\"form-control btn btn-primary\\\" \\n                        type=\\\"button\\\"\\n                        id=\\\"submitMetadata\\\" \\n                        name=\\\"submitMetadata\\\"\\n                        (click)=\\\"onNewItemAdded()\\\">\\n                          Add Item\\n                    </button>     <br><br>\\n                   \\n                   <button \\n                        class=\\\"form-control btn btn-primary\\\" \\n                        type=\\\"button\\\"\\n                        id=\\\"submitMetadata\\\" \\n                        name=\\\"submitMetadata\\\"\\n                        (click)=\\\"onNewDropdownCreate()\\\">\\n                            CREATE\\n                    </button>\\n                </div>\\n        </div>\\n\\n        <div [formGroup]=\\\"dfFormGroup\\\" *ngIf=\\\"wantnewdate==true\\\">\\n                <br><br>\\n                Section: \\n                <select \\n                class=\\\"form-control\\\" \\n                style=\\\"width: 100%;\\\"  \\n                formControlName=\\\"sectionno\\\"\\n                (change)=\\\"onSectionSelectChanged()\\\" \\n                \\n                >\\n                    <option value=\\\"\\\" disabled selected>Select</option>\\n                    <option \\n                        *ngFor=\\\"let opt of Options\\\" \\n                        [ngValue]=\\\"opt.key\\\">\\n                            {{ opt.value }}\\n                    </option>\\n            </select><br><br>\\n                <!-- Type: <input id=\\\"t2\\\" type='text'><br> -->\\n                <br><br><br><br><br><br>\\n                Key: <input class=\\\"form-control\\\" formControlName=\\\"custom_key\\\" type=\\\"text\\\"><br><br>\\n                    <button \\n                    class=\\\"form-control btn btn-primary\\\" \\n                    type=\\\"button\\\"\\n                    id=\\\"submitMetadata\\\" \\n                    name=\\\"submitMetadata\\\"\\n                    (click)=\\\"onNewDateCreate()\\\">\\n                        CREATE\\n                </button>\\n            </div>\\n    </div>\\n\\n    <div [formGroup]=\\\"dfFormGroup\\\" *ngIf=\\\"wantnewrange==true\\\">\\n            <br><br>\\n            Section: \\n            <select \\n            class=\\\"form-control\\\" \\n            style=\\\"width: 100%;\\\"  \\n            formControlName=\\\"sectionno\\\"\\n            (change)=\\\"onSectionSelectChanged()\\\" \\n            \\n            >\\n                <option value=\\\"\\\" disabled selected>Select</option>\\n                <option \\n                    *ngFor=\\\"let opt of Options\\\" \\n                    [ngValue]=\\\"opt.key\\\">\\n                        {{ opt.value }}\\n                </option>\\n        </select><br><br>\\n            <!-- Type: <input id=\\\"t2\\\" type='text'><br> -->\\n            <br><br><br><br><br><br>\\n            Key: <input class=\\\"form-control\\\" formControlName=\\\"custom_key\\\" type=\\\"text\\\"><br>\\n            Min: <input class=\\\"form-control\\\" formControlName=\\\"range_min\\\" type=\\\"text\\\"><br>\\n            Max: <input class=\\\"form-control\\\" formControlName=\\\"range_max\\\" type=\\\"text\\\"><br>\\n                <button \\n                class=\\\"form-control btn btn-primary\\\" \\n                type=\\\"button\\\"\\n                id=\\\"submitMetadata\\\" \\n                name=\\\"submitMetadata\\\"\\n                (click)=\\\"onNewRangeCreate()\\\">\\n                    CREATE\\n            </button>\\n        <!-- </div> -->\\n</div>\\n<div [formGroup]=\\\"dfFormGroup\\\" *ngIf=\\\"wantnewtext==true\\\">\\n        <br><br>\\n        Section: \\n        <select \\n        class=\\\"form-control\\\" \\n        style=\\\"width: 100%;\\\"  \\n        formControlName=\\\"sectionno\\\"\\n        (change)=\\\"onSectionSelectChanged()\\\" \\n        \\n        >\\n            <option value=\\\"\\\" disabled selected>Select</option>\\n            <option \\n                *ngFor=\\\"let opt of Options\\\" \\n                [ngValue]=\\\"opt.key\\\">\\n                    {{ opt.value }}\\n            </option>\\n    </select><br><br>\\n        <!-- Type: <input id=\\\"t2\\\" type='text'><br> -->\\n        <br><br><br><br><br><br>\\n        Key: <input class=\\\"form-control\\\" formControlName=\\\"custom_key\\\" type=\\\"text\\\"><br>\\n        Default: <input class=\\\"form-control\\\" formControlName=\\\"text_default\\\" type=\\\"text\\\"><br>\\n        Max: <input class=\\\"form-control\\\" formControlName=\\\"text_max\\\" type=\\\"text\\\"><br>\\n        Disable: <input id=\\\"checkDisable\\\" type=\\\"checkbox\\\">\\n            <button \\n            class=\\\"form-control btn btn-primary\\\" \\n            type=\\\"button\\\"\\n            id=\\\"submitMetadata\\\" \\n            name=\\\"submitMetadata\\\"\\n            (click)=\\\"onNewTextCreate()\\\">\\n                CREATE\\n        </button>\\n    <!-- </div> -->\\n</div>\\n<div [formGroup]=\\\"dfFormGroup\\\" *ngIf=\\\"wantnewtoggle==true\\\">\\n        <br><br>\\n        Section: \\n        <select \\n        class=\\\"form-control\\\" \\n        style=\\\"width: 100%;\\\"  \\n        formControlName=\\\"sectionno\\\"\\n        (change)=\\\"onSectionSelectChanged()\\\" \\n        \\n        >\\n            <option value=\\\"\\\" disabled selected>Select</option>\\n            <option \\n                *ngFor=\\\"let opt of Options\\\" \\n                [ngValue]=\\\"opt.key\\\">\\n                    {{ opt.value }}\\n            </option>\\n    </select><br><br>\\n        <!-- Type: <input id=\\\"t2\\\" type='text'><br> -->\\n        <br><br><br><br><br><br>\\n        Key: <input class=\\\"form-control\\\" formControlName=\\\"custom_key\\\" type=\\\"text\\\"><br>\\n        Default True: <input id=\\\"toggleDefault\\\" type=\\\"checkbox\\\">\\n            <button \\n            class=\\\"form-control btn btn-primary\\\" \\n            type=\\\"button\\\"\\n            id=\\\"submitMetadata\\\" \\n            name=\\\"submitMetadata\\\"\\n            (click)=\\\"onNewToggleCreate()\\\">\\n                CREATE\\n        </button>\\n    <!-- </div> -->\\n</div>\\n    <!-- </div> -->\\n\\n    <div [formGroup]=\\\"dfFormGroup\\\" *ngIf=\\\"wantnewrange==true\\\">\\n            <br><br>\\n            Section: \\n            <select \\n            class=\\\"form-control\\\" \\n            style=\\\"width: 100%;\\\"  \\n            formControlName=\\\"sectionno\\\"\\n            (change)=\\\"onSectionSelectChanged()\\\" \\n            \\n            >\\n                <option value=\\\"\\\" disabled selected>Select</option>\\n                <option \\n                    *ngFor=\\\"let opt of Options\\\" \\n                    [ngValue]=\\\"opt.key\\\">\\n                        {{ opt.value }}\\n                </option>\\n        </select><br><br>\\n            <!-- Type: <input id=\\\"t2\\\" type='text'><br> -->\\n            <br><br><br><br><br><br>\\n            Key: <input class=\\\"form-control\\\" formControlName=\\\"custom_key\\\" type=\\\"text\\\"><br>\\n            Min: <input class=\\\"form-control\\\" formControlName=\\\"range_min\\\" type=\\\"text\\\"><br>\\n            Max: <input class=\\\"form-control\\\" formControlName=\\\"range_max\\\" type=\\\"text\\\"><br>\\n                <button \\n                class=\\\"form-control btn btn-primary\\\" \\n                type=\\\"button\\\"\\n                id=\\\"submitMetadata\\\" \\n                name=\\\"submitMetadata\\\"\\n                (click)=\\\"onNewRangeCreate()\\\">\\n                    CREATE\\n            </button>\\n        <!-- </div> -->\\n</div>\\n<div [formGroup]=\\\"dfFormGroup\\\" *ngIf=\\\"wantnewdependent==true\\\">\\n    <br><br>\\n    Section: \\n    <select \\n    class=\\\"form-control\\\" \\n    style=\\\"width: 100%;\\\"  \\n    formControlName=\\\"sectionno\\\"\\n    (change)=\\\"onSectionSelectChanged()\\\" \\n    \\n    >\\n        <option value=\\\"\\\" disabled selected>Select</option>\\n        <option \\n            *ngFor=\\\"let opt of Options\\\" \\n            [ngValue]=\\\"opt.key\\\">\\n                {{ opt.value }}\\n        </option>\\n</select><br><br>\\n    <!-- Type: <input id=\\\"t2\\\" type='text'><br> -->\\n    <br><br><br><br><br><br>\\n    Key: <input class=\\\"form-control\\\" formControlName=\\\"custom_key\\\" type=\\\"text\\\"><br><br>\\n        <button \\n        class=\\\"form-control btn btn-primary\\\" \\n        type=\\\"button\\\"\\n        id=\\\"submitMetadata\\\" \\n        name=\\\"submitMetadata\\\"\\n        (click)=\\\"onNewDependentCreate()\\\">\\n            CREATE\\n    </button>\\n</div>\\n\\n<div [formGroup]=\\\"dfFormGroup\\\" *ngIf=\\\"wantnewtextother==true\\\">\\n    <br><br>\\n    Section: \\n    <select \\n    class=\\\"form-control\\\" \\n    style=\\\"width: 100%;\\\"  \\n    formControlName=\\\"sectionno\\\"\\n    (change)=\\\"onSectionSelectChanged()\\\" \\n    \\n    >\\n        <option value=\\\"\\\" disabled selected>Select</option>\\n        <option \\n            *ngFor=\\\"let opt of Options\\\" \\n            [ngValue]=\\\"opt.key\\\">\\n                {{ opt.value }}\\n        </option>\\n</select><br><br>\\n    <!-- Type: <input id=\\\"t2\\\" type='text'><br> -->\\n    <br><br><br><br><br><br>\\n    Key: <input class=\\\"form-control\\\" formControlName=\\\"custom_key\\\" type=\\\"text\\\"><br><br>\\n        <button \\n        class=\\\"form-control btn btn-primary\\\" \\n        type=\\\"button\\\"\\n        id=\\\"submitMetadata\\\" \\n        name=\\\"submitMetadata\\\"\\n        (click)=\\\"onNewOtherCreate()\\\">\\n            CREATE\\n    </button>\\n</div>\\n\\n    <div class=\\\"col-md-12 form-group\\\">\\n        <button \\n            class=\\\"form-control btn btn-primary\\\" \\n            type=\\\"button\\\"\\n            id=\\\"submitMetadata\\\" \\n            name=\\\"submitMetadata\\\"\\n            (click)=\\\"onSubmit()\\\">\\n                Submit\\n        </button>\\n        <br>\\n        <button \\n            class=\\\"form-control btn btn-primary\\\" \\n            type=\\\"button\\\"\\n            id=\\\"submitMetadata\\\" \\n            name=\\\"submitMetadata\\\"\\n            (click)=\\\"onResetJSON()\\\">\\n                RESET JSON\\n        </button>\\n    </div>\\n</div>\\n\\n<iframe class=\\\"right\\\" src= \\\"http://localhost:3000/form\\\"> </iframe>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/designer/root/designer-root.component.html\n// module id = ../../../../../src/app/designer/root/designer-root.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Response } from \"@angular/http\";\n\nimport { FormField } from '../../models/form-field';\nimport { DynamicFormService } from '../../services/dynamic-form.service';\n\n@Component({\n  selector: 'app-designer-root',\n  templateUrl: './designer-root.component.html',\n  styleUrls: ['./designer-root.component.css']\n})\nexport class DesignerRootComponent implements OnInit {\n\n    dfFormGroup: FormGroup = new FormGroup({\n        'md' : new FormControl(),\n        't1' : new FormControl(),\n        'dropdownitem' : new FormControl(),\n        'custom_key' : new FormControl(), // Default name given for every control\n        'range_min' : new FormControl(), // Controls for range\n        'range_max' : new FormControl(),\n        'text_default' : new FormControl(), // Controls for text\n        'text_max' : new FormControl(),\n        'sectionno' : new FormControl() //Section Number selected currently\n    });\n    dynamicFormFieldTextArea: FormField = new FormField({\n        'id': 'md',\n        'key': 'md',\n        'label': 'Metadata',\n        'type': 'textarea',\n        'rows': 25\n    });\n // These variables toggle when the add new..... button is clicked   \n    wantnewsection=false;\n    wantnewdate=false;\n    wantnewdropdown=false;\n    wantnewrange=false;\n    wantnewtext=false;\n    wantnewtoggle=false;\n\n    wantnewdependent=false;\n    wantnewtextother=false;\n    wantnewtextappend=false;\n    wantnewbutton=false;\n\n    //Control counts\n    section_count=2;\n    dropdown_count=1;\n    date_count=1;\n    text_count=1;\n    range_count=1;\n    toggle_count=1;\n    dependent_count=1;\n    textappend_count=1;\n    textother_count=1;\n    button_count=1;\n\n\nsource=\"http://localhost:4201/form\";\n\n    //Initial Reading\n    is_first_time=true;\n    is_disabled=false;\n    meta={};\n    ddlist={};\n    ddlist_count;\n    xx={};\n\n    //Current Section\n    current_section=1;\n\n    //Options for section selection\n     Options=[];\n    /* Options=[\n        {\n            \"key\": 1,\n            \"value\": 1\n        },\n        {\n            \"key\":2,\n            \"value\": 2\n        }\n    ] */// Default 2 sections\n\n    constructor(private dynamicFormService: DynamicFormService) { }\n\n    ngOnInit() {\n        this.dynamicFormService.getFormMetadataJson()\n            .subscribe((resp: Response) => {\n                const metadata = JSON.stringify(resp.json(), null, 4);\n                this.dfFormGroup.setControl('md', new FormControl(metadata));\n                \n                this.section_count=0;\n                var metaresp=JSON.parse(metadata);\n                for (let sec of metaresp['containers'])\n                {\n                    console.log(sec);\n                    this.Options.push({\n                        \"key\": this.section_count+1,\n                        \"value\":this.section_count+1\n                    })\n                    this.section_count++;\n                }\n                this.meta=metaresp;\n                //this.xx.push()\n                //console.log(metadata);\n                \n\n            }, (err) => {\n                console.error(err);\n            });\n\n      \n           \n            \n            \n\n\n\n            \n    }\n\n    onSubmit() {\n        this.dynamicFormService.setFormMetadataJson(JSON.stringify(this.meta))\n            .subscribe((resp: Response) => {\n                console.log(resp);\n                this.source=\"http://localhost:4201/form\";\n                window.location.reload();\n            }, (err) => {\n                console.error(err);\n            });\n    }\n\n    onNewSection() {\n        this.makeAllControlsInvisible();\n                this.wantnewsection=true;               \n\n            \n    }\n\n    onNewDropdown() {\n        this.makeAllControlsInvisible();\n                this.wantnewdropdown=true;   \n                this.ddlist_count=0;            \n\n    \n}\nonNewDate() {\n    this.makeAllControlsInvisible();\n    this.wantnewdate=true;               \n\n\n}\n\nonNewRange() {\n    this.makeAllControlsInvisible();\n    this.wantnewrange=true;               \n\n\n}\nonNewText() {\n    this.makeAllControlsInvisible();\n    this.wantnewtext=true;               \n\n\n}\nonNewToggle() {\n    this.makeAllControlsInvisible();\n    this.wantnewtoggle=true;               \n\n\n}\n\nmakeAllControlsInvisible()\n{\n    this.wantnewsection=false;\n    this.wantnewdate=false;\n    this.wantnewdropdown=false;\n    this.wantnewrange=false;\n    this.wantnewtext=false;\n    this.wantnewtoggle=false\n    this.wantnewbutton=false;\n    this.wantnewtextappend=false;\n    this.wantnewtextother=false;  \n}\n\nonNewDependent()\n{\n    this.makeAllControlsInvisible(); \nthis.wantnewdependent=true;\n}\n\nonNewOther()\n{\nthis.makeAllControlsInvisible();\nthis.wantnewtextother=true;\n}\n\n    onNewSectionCreate() {\n        this.dynamicFormService.getFormMetadataJson()\n            .subscribe((resp: Response) => {\n                const metadata = JSON.stringify(resp.json(), null, 4);\n                this.dfFormGroup.setControl('md', new FormControl(metadata));\n                \n                // NEWLY ADDED CODE BEGINS\n\n                if (this.is_first_time==true)\n                {var jsonContent = JSON.parse(metadata);\n                    this.meta=jsonContent;\n                    this.is_first_time=false;\n                }\n                var v=true;\n               var collapse=<HTMLInputElement>document.getElementById(\"section_collapsed\");\n               if(collapse.checked){v=false;}\n                this.meta['containers'][this.section_count]={\"key\":this.dfFormGroup.value.t1, \"type\":\"SECTION\",\"controllist\":[],\"visible\":v};\n                console.log(this.meta);\n                this.wantnewsection=false;\n                this.section_count++;\n                this.Options.push({\"key\":this.section_count, \"value\":this.section_count});\n                // NEWLY ADDED CODE ENDS\n\n            }, (err) => {\n                console.error(err);\n            });\n    }\n\n    onNewDropdownCreate() {\n        this.dropdown_count++;\n        this.meta['containers'][this.current_section-1]['controllist'].push({\"key\":\"dc_type_\"+this.dropdown_count,\"type\":\"field\"});\n        \n        this.meta['controls'].push(\n            {\n                \"id\": \"dc_type_\"+this.dropdown_count,\n            \"key\": \"dc_type_\"+this.dropdown_count,\n            \"label\": this.dfFormGroup.value.custom_key,\n            \"type\": \"DROPDOWN\",\n            \"disabled\": false,\n            \"selectorControl\": {\n                \"defaultValue\": \"LOCAL_FILE\",\n                \"options\":this.ddlist /* {\n                    \"LOCAL_FILE\": \"fbt_option_local_file\",\n                    \"PULL\": \"fbt_option_pull\",\n                    \"SMBPULL\": \"fbt_option_smbpull\",\n                    \"SCRIPTPULL\": \"fbt_option_scriptpull\",\n                    \"LOCAL_SCRIPTPULL\": \"fbt_option_local_scriptpull\",\n                    \"WBEM_PULL\": \"fbt_option_wbem_pull\",\n                    \"LOCAL_WINDOWS_EVENTS\": \"fbt_option_local_windows_events\",\n                    \"INTEGRATION\": \"fbt_option_integration\",\n                    \"PORT_PUSH\": \"fbt_option_port_push\",\n                    \"REST_END_POINT\": \"fbt_option_rest_end_point\",\n                    \"FILE_UPLOAD\": \"fbt_option_file_upload\"\n                } */\n            },\n            \"mandatory\": true,\n            \"path\": \".\"\n            }\n        )\n        console.log(this.meta);\n        this.wantnewdropdown=false;\n    }\n\n    onNewDateCreate() {\n        \n        this.date_count++;\n        this.meta['containers'][this.current_section-1]['controllist'].push({\"key\":\"dc_date_\"+this.date_count,\"type\":\"field\"});\n        this.meta['controls'].push(\n            {\n                \"id\": \"dc_date_\"+this.section_count,\n                \"key\": \"dc_date_\"+this.section_count,\n                \"label\": this.dfFormGroup.value.custom_key,\n                \"type\": \"DATE\",\n                \"disabled\": false,\n                \"mandatory\": true,\n                \"value\": null\n            }\n        )    \n          \n        //this.meta['containers'][this.current_section-1]['controllist'].push({\"key\":\"dc_date\",\"type\":\"field\"});\n        console.log(this.meta);\n        this.wantnewdate=false;\n    }\n    onNewRangeCreate() {\n        this.range_count++;\n        this.meta['containers'][this.current_section-1]['controllist'].push({\"key\":\"dc_range_\"+this.range_count,\"type\":\"field\"});\n        this.meta['controls'].push(\n            {\n                \"id\": \"dc_range_\"+this.range_count,\n                \"key\": \"dc_range_\"+this.range_count,\n                \"label\": this.dfFormGroup.value.custom_key,\n                \"type\": \"RANGE\",\n                \"minlength\": this.dfFormGroup.value.range_min,\n                \"maxlength\": this.dfFormGroup.value.range_max,\n                \"value\": 60\n            }\n        )\n        console.log(this.meta);\n        this.wantnewrange=false;\n    }\n    onNewTextCreate() {\n        this.text_count++;\n        this.is_disabled=false;\n        var a=<HTMLInputElement>document.getElementById(\"checkDisable\");\n        if(a.checked){this.is_disabled=true;}\n        console.log(a.checked);\n        this.meta['containers'][this.current_section-1]['controllist'].push({\"key\":\"dc_name_\"+this.text_count,\"type\":\"field\"});\n        this.meta['controls'].push(\n            {\n                \"id\": \"dc_name_\"+this.text_count,\n                \"key\": \"dc_name_\"+this.text_count,\n                \"label\": this.dfFormGroup.value.custom_key,\n                \"type\": \"TEXT\",\n                \"disabled\": this.is_disabled,\n                \"mandatory\": true,\n                \"maxlength\": this.dfFormGroup.value.text_max,\n                \"path\": \".\",\n                \"value\": this.dfFormGroup.value.text_default,\n                \"errorMessages\": {\n                    \"REQUIRED_ERROR\": \"fbt_REQUIRED_ERROR_instance_name\"\n                }\n            }\n        )\n        console.log(this.meta);\n        this.wantnewtext=false;\n        \n    }\n    onNewToggleCreate() {\n        this.toggle_count++;\n        var b=false;\n        var a=<HTMLInputElement>document.getElementById(\"toggleDefault\");\n        if(a.checked){b=true;}\n        this.meta['containers'][this.current_section-1]['controllist'].push({\"key\":\"dc_toggle_\"+this.toggle_count,\"type\":\"field\"});\n        this.meta['controls'].push(\n            {\n                \"id\": \"dc_toggle_\"+this.toggle_count,\n                \"key\": \"dc_toggle_\"+this.toggle_count,\n                \"label\": this.dfFormGroup.value.custom_key,\n                \"type\": \"TOGGLE\",\n                \"disabled\": true,\n                \"value\": b\n            }\n\n        )\n        console.log(this.meta);\n        this.wantnewtoggle=false;\n    }\n\nonNewDependentCreate(){\nthis.dependent_count++;\nthis.meta['containers'][this.current_section-1]['controllist'].push({\"key\":\"dc_dependent_\"+this.dependent_count,\"type\":\"field\"});\nthis.meta['controls'].push(\n    {\n        \"id\": \"dc_dependent_\"+this.dependent_count,\n        \"key\": \"dc_dependent_\"+this.dependent_count,\n        \"label\": this.dfFormGroup.value.custom_key,\n        \"type\": \"DEPENDENTLIST\",\n        \"disabled\": false\n    }\n)\n}\n\nonNewOtherCreate(){\n    this.textother_count++;\n    this.meta['containers'][this.current_section-1]['controllist'].push({\"key\":\"dc_textother_\"+this.dependent_count,\"type\":\"field\"});\n    this.meta['controls'].push(\n        {\n            \"id\": \"dc_textother_\"+this.textother_count,\n            \"key\": \"dc_textother_\"+this.textother_count,\n            \"label\": this.dfFormGroup.value.custom_key,\n            \"type\": \"TEXTOTHER\",\n            \"disabled\": false\n        }\n    )\n}\n\n    onSectionSelectChanged()\n    {\nthis.current_section=this.dfFormGroup.value.sectionno;\n    }\n\n    onNewItemAdded()\n    {\n        var a=\"key\"+this.ddlist_count;\n        console.log(a);\n        this.ddlist[a]=this.dfFormGroup.value.dropdownitem;\n\nthis.ddlist_count++;\nconsole.log(this.ddlist)\n    }\n\n    onResetJSON() {\nvar original={\n    \"containers\": [\n        {\n            \"key\": \"dc_create_data_collector1\",\n            \"type\": \"SECTION\",\n            \"controllist\": [\n                {\n                    \"key\": \"dc_name\",\n                    \"type\": \"field\"\n                },\n                {\n                    \"key\": \"dc_type\",\n                    \"type\": \"field\"\n                },\n                {\n                    \"key\": \"dc_dependent\",\n                    \"type\": \"field\"\n                },\n                {\n                    \"key\": \"dc_textother\",\n                    \"type\": \"field\"\n                },\n                {\n                    \"key\": \"dc_toggle\",\n                    \"type\": \"field\"\n                }\n            ],\n            \"label\": \"fbt_create_data_collector1\",\n            \"visible\": true\n        },\n        {\n            \"key\": \"dc_create_data_collector2\",\n            \"type\": \"SECTION\",\n            \"controllist\": [\n                {\n                    \"key\": \"dc_date\",\n                    \"type\": \"field\"\n                },\n                {\n                    \"key\": \"dc_range\",\n                    \"type\": \"field\"\n                },\n                {\n                    \"key\": \"dc_textappend\",\n                    \"type\": \"field\"\n                },\n                {\n                    \"key\": \"dc_button\",\n                    \"type\": \"field\"\n                }\n            ],\n            \"visible\": false\n        }\n    ],\n    \"controls\": [\n        {\n            \"id\": \"dc_name\",\n            \"key\": \"dc_name\",\n            \"label\": \"fbt_name\",\n            \"type\": \"TEXT\",\n            \"disabled\": false,\n            \"mandatory\": true,\n            \"maxlength\": 100,\n            \"path\": \".\",\n            \"value\": \"Hello World !!\",\n            \"errorMessages\": {\n                \"REQUIRED_ERROR\": \"fbt_REQUIRED_ERROR_instance_name\"\n            }\n        },\n        {\n            \"id\": \"dc_type\",\n            \"key\": \"dc_type\",\n            \"label\": \"fbt_type\",\n            \"type\": \"DROPDOWN\",\n            \"disabled\": false,\n            \"selectorControl\": {\n                \"defaultValue\": \"LOCAL_FILE\",\n                \"options\": {\n                    \"LOCAL_FILE\": \"fbt_option_local_file\",\n                    \"PULL\": \"fbt_option_pull\",\n                    \"SMBPULL\": \"fbt_option_smbpull\",\n                    \"SCRIPTPULL\": \"fbt_option_scriptpull\",\n                    \"LOCAL_SCRIPTPULL\": \"fbt_option_local_scriptpull\",\n                    \"WBEM_PULL\": \"fbt_option_wbem_pull\",\n                    \"LOCAL_WINDOWS_EVENTS\": \"fbt_option_local_windows_events\",\n                    \"INTEGRATION\": \"fbt_option_integration\",\n                    \"PORT_PUSH\": \"fbt_option_port_push\",\n                    \"REST_END_POINT\": \"fbt_option_rest_end_point\",\n                    \"FILE_UPLOAD\": \"fbt_option_file_upload\"\n                }\n            },\n            \"mandatory\": true,\n            \"path\": \".\"\n        },\n        {\n            \"id\": \"dc_date\",\n            \"key\": \"dc_date\",\n            \"label\": \"fbt_date\",\n            \"type\": \"DATE\",\n            \"disabled\": false,\n            \"mandatory\": true,\n            \"value\": null\n        },\n        {\n            \"id\": \"dc_range\",\n            \"key\": \"dc_range\",\n            \"label\": \"fbt_range\",\n            \"type\": \"RANGE\",\n            \"minlength\": 0,\n            \"maxlength\": 100,\n            \"value\": 60\n        },\n        {\n            \"id\": \"dc_button\",\n            \"key\": \"dc_button\",\n            \"label\": \"fbt_button\",\n            \"type\": \"BUTTON\",\n            \"disabled\": false\n        },\n        {\n            \"id\": \"dc_dependent\",\n            \"key\": \"dc_dependent\",\n            \"label\": \"fbt_dependentlist\",\n            \"type\": \"DEPENDENTLIST\",\n            \"disabled\": false\n        },\n        {\n            \"id\": \"dc_textappend\",\n            \"key\": \"dc_textappend\",\n            \"label\": \"fbt_textappend\",\n            \"type\": \"TEXTAPPEND\",\n            \"disabled\": false\n        },\n        {\n            \"id\": \"dc_textother\",\n            \"key\": \"dc_textother\",\n            \"label\": \"fbt_textother\",\n            \"type\": \"TEXTOTHER\",\n            \"disabled\": false\n        },\n        {\n            \"id\": \"dc_toggle\",\n            \"key\": \"dc_toggle\",\n            \"label\": \"fbt_toggle\",\n            \"type\": \"TOGGLE\",\n            \"disabled\": true,\n            \"value\": false\n        }\n        \n    ]\n}\n\n\n\n        this.dynamicFormService.setFormMetadataJson(JSON.stringify(original))\n            .subscribe((resp: Response) => {\n                \n                window.location.reload();\n            }, (err) => {\n                console.error(err);\n            });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/designer/root/designer-root.component.ts","import { FormField as DynamicFormField } from './form-field';\n\ninterface DynamicFormSectionConfiguration {\n\n    fields ?: DynamicFormField[];\n    key: string;\n    label: string;\n    type: string;\n    visible ?: Boolean;\n\n}\n\nexport class DynamicFormSection {\n    \n    private fields: DynamicFormField[];\n    private key: string;\n    public label: string;\n    private type: string;\n    private visible: Boolean;\n\n    constructor(dfsc: DynamicFormSectionConfiguration) {\n\n        this.fields = dfsc.fields;\n        this.key = dfsc.key;\n        this.label = dfsc.label ? dfsc.label : dfsc.key;\n        this.type = dfsc.type;\n        this.visible = dfsc.visible !== undefined ? dfsc.visible : true;\n\n    }\n\n    getFields() : DynamicFormField[] {\n        return this.fields;\n    }\n    \n    getKey() : string {\n        return this.key;\n    }\n\n    getLabel() : string {\n        return this.label;\n    }\n\n    getVisible() : Boolean {\n        return this.visible;\n    }\n    \n}\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/models/df-form-section.ts","import { DynamicFormSection} from './df-form-section';\n\ninterface DynamicFormConfiguration {\n\n    sections : DynamicFormSection[];\n\n}\n\nexport class DynamicForm {\n\n    private sections: DynamicFormSection[];\n\n    constructor(dfc: DynamicFormConfiguration) {\n        this.sections = dfc.sections;\n    }\n\n    getSections() : DynamicFormSection[] {\n        return this.sections;\n    }\n\n    getSection(i) : DynamicFormSection {\n        return this.sections[i];\n    }\n    \n}\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/models/df-form.ts","interface ErrorMessages {\n\n    REQUIRED_ERROR ?: string\n\n}\n\ninterface SelectorControl {\n\n    defaultValue ?: string,\n    options ?: Object\n\n}\n\ninterface FormFieldConfiguration {\n\n    disabled ?: boolean,\n    errorMessages ?: ErrorMessages\n    id : string,\n    key : string,\n    label : string,\n    mandatory ?: boolean,\n    maxlength ?: number,\n    minlength ?: number,\n    onClick ?: object,\n    path ?: string,\n    rows ?: number;\n    selectorControl ?: SelectorControl,\n    type : string,\n    value ?: string,\n\n}\n\nexport class FormField {\n  \n    public disabled: boolean;\n    private errorMessages: ErrorMessages;\n    private id: string;\n    public key: string;\n    public key1: string;\n    public label: string;\n    private mandatory: boolean;\n    private maxlength: number;\n    private minlength: number;\n    private onClick: object;\n    private path: string;\n    public rows: number;\n    public selectorControl: SelectorControl;\n    public type: string;\n    public value: string;\n\n    constructor(ffg: FormFieldConfiguration) {\n\n        this.disabled = ffg.disabled !== undefined ? !!ffg.disabled : false;\n        this.errorMessages = ffg.errorMessages || {};\n        this.id = ffg.id;\n        this.key = ffg.key;\n        this.label = ffg.label;\n        this.mandatory = ffg.mandatory !== undefined ? !!ffg.mandatory : false;\n        this.maxlength = ffg.maxlength || 256;\n        this.minlength = ffg.minlength || 0;\n        this.path = ffg.path || '';\n        this.rows = ffg.rows || 5;\n        this.selectorControl = ffg.selectorControl ? this.getSelectorControl(ffg.selectorControl) : { 'defaultValue' : null, 'options' : [] };\n        this.type = ffg.type;\n        this.value = (ffg.type === 'DATE' ? this.getDateValue(ffg.value) : ffg.value) || '';\n    }\n\n    getId() : string {\n        return this.id;\n    }\n\n    getKey() : string {\n        return this.key;\n    }\n\n    getMandatory() : boolean {\n        return this.mandatory;\n    }\n\n    getSelectorDefaultValue() : string {\n        return this.selectorControl.defaultValue;\n    }\n\n    getValue() : string {\n        return this.value;\n    }\n\n    getType() : string {\n        return this.type;\n    }\n \n    private getSelectorControl(sc: SelectorControl) : SelectorControl {\n        return {\n            defaultValue : sc.defaultValue,\n            options : Object.keys(sc.options).map( \n                (key) => ({ 'key': key, 'value': sc.options[key] }) \n            )\n        }\n    }\n\n    private getDateValue(value: string) : string {\n        const date = value ? new Date(value) : new Date();\n        const m = date.getMonth() + 1; // offset for date month starting from 0 instead of 1 for january\n        const d ={\n            yyyy : date.getFullYear(),\n            mm : m < 10 ? ('0' + m) : m,\n            dd : date.getDate()\n        }\n        return (d.yyyy + '-' + d.mm  + '-' + d.dd);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/models/form-field.ts","import { FormControl, FormGroup, FormArray, Validators } from '@angular/forms';\n\nimport { FormField as DynamicFormField } from '../models/form-field';\nimport { DynamicFormSection}     from '../models/df-form-section';\n\nexport class DynamicFormFieldControlService {\n\n    constructor() { }\n\n    getFormGroups(dynamicFormSections : DynamicFormSection[]) : FormGroup {\n\n        const formGroupConfig = {};\n\n        dynamicFormSections.forEach(\n            (dynamicFormSection) => {\n\n                const formArray = new FormArray([]);\n                dynamicFormSection.getFields().forEach(\n                    (field) => {\n                        formGroupConfig[field.getKey()] = this.getFormControl(field);\n                    }\n                )\n\n            }\n        )\n\n        const formGroup = new FormGroup(formGroupConfig);\n        return formGroup;\n\n    }\n\n    private getFormControl(dff : DynamicFormField) : FormControl {\n\n        const validators = [];\n        if(dff.getMandatory()) validators.push(Validators.required);\n\n        const formControl = new FormControl(dff.getValue() || dff.getSelectorDefaultValue() || '', validators)\n        return formControl;\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/services/dynamic-form-field-control.service.ts","import { FormField as DynamicFormField }     from '../models/form-field';\n\nexport class DynamicFormFieldService {\n\n    formFields : DynamicFormField[] = [];\n    formFieldsMap : Object = {};\n\n    initControls(controls: Object[]) {\n        \n        this.formFields = controls.map(\n            (control) => {\n\n                const formField = new DynamicFormField({\n                    'disabled': control['disabled'],\n                    'errorMessages': control['errorMessages'],\n                    'id': control['id'],\n                    'key': control['key'],\n                    'label': control['label'],\n                    'mandatory': control['mandatory'],\n                    'maxlength': control['maxlength'],\n                    'path': control['path'],\n                    'rows': control['rows'],\n                    'selectorControl': control['selectorControl'],\n                    'type': control['type'],\n                    'value': control['value'],\n                });\n\n                this.formFieldsMap[control['key']] = formField;\n\n                return formField;\n            }\n        );\n\n    }\n\n    getFormFields(controllist: Object[]) : DynamicFormField[] {\n        return controllist.map(\n            (control) => {\n                const key = control['key'];\n                const type = control['type'];\n                if(type !== 'field') {  }\n                return this.formFieldsMap[key];\n            }\n        );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/services/dynamic-form-field.service.ts","import { Injectable } from '@angular/core';\n\nimport { FormField }     from '../models/form-field';\nimport { DynamicFormSection }     from '../models/df-form-section';\n\nimport { DynamicFormFieldService } from './dynamic-form-field.service';\n\n@Injectable()\nexport class DynamicFormSectionService {\n\n    formSections : DynamicFormSection[] = [];\n\n    constructor(private dynamicFormFieldService: DynamicFormFieldService) { };\n\n    getFormSections(containers: Object[]) : DynamicFormSection[] {\n\n        this.formSections = containers.map(\n            (container) => {\n\n                const fields = this.dynamicFormFieldService.getFormFields(container['controllist']);\n                const formSection = new DynamicFormSection({\n                    'fields': fields,\n                    'key': container['key'],\n                    'label': container['label'],\n                    'type': container['type'],\n                    'visible': container['visible']\n                });\n\n                return formSection;\n            }\n        );\n\n        return this.formSections;\n        \n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/services/dynamic-form-section.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from \"@angular/http\";\n\nimport { Observable } from 'rxjs/Observable';\n\nimport { FormField as DynamicFormField }     from '../models/form-field';\nimport { DynamicFormSection }     from '../models/df-form-section';\nimport { DynamicForm } from '../models/df-form';\n\nimport { DynamicFormSectionService } from './dynamic-form-section.service';\nimport { DynamicFormFieldService } from './dynamic-form-field.service';\n\nconst headerJson = new Headers({ 'Content-Type': 'application/json' });\n\n@Injectable()\nexport class DynamicFormService {\n\n    form : DynamicForm;\n    metadata : Object;\n\n    constructor(private http: Http, private dynamicFormSectionService: DynamicFormSectionService, private dynamicFormFieldService: DynamicFormFieldService) { }\n\n    initForm(metadata) {\n        this.metadata = metadata;\n        \n        this.dynamicFormFieldService.initControls(metadata['controls']);\n        \n        this.form = new DynamicForm({ \n            'sections' : this.dynamicFormSectionService.getFormSections(metadata['containers'])\n        });\n    }\n\n    getForm() : DynamicForm {\n        return this.form;\n    }\n\n    getMetadata() : Object {\n        return this.metadata;\n    }\n\n    getFormMetadataJson() : Observable<Response> {\n        // const { HOST, PORT } = this.envService.getConnectionDetails();\n        var HOST = 'localhost', PORT = 3000;\n        const url = (HOST && PORT) ? 'http://' + HOST + ':' + PORT : '';\n        return this.http.get(url + '/df/api/formmetadata');\n    }\n\n    setFormMetadataJson(metadata: String) : Observable<Response> {\n        // const { HOST, PORT } = this.envService.getConnectionDetails();\n        var HOST = 'localhost', PORT = 3000;\n        const url = (HOST && PORT) ? 'http://' + HOST + ':' + PORT : '';\n        return this.http.post(url + '/df/api/formmetadata', metadata, { headers: headerJson });\n    }\n\n    getOtherList()\n    {\n        return[{\n            'key': 'BTech',\n            'value': 'BTech'\n        },\n        {\n            'key': 'MBBS',\n            'value': 'MBBS'\n        },{\n            'key': 'BA',\n            'value': 'BA'\n        },\n        {\n            'key':'Other',\n            'value':'Other'\n        }];\n    }\n\n    getFormControlMasterMetadataJson() {\n        return [{\n            'key' : 'A',\n            'value' : 'Pune University'\n        }, {\n            'key' : 'B',\n            'value' : 'Mumbai University'\n        }, {\n            'key' : 'C',\n            'value' : 'Autonomous Institute'\n        }];\n    }\n\n    getFormControlMetadataJson(option) {\n        const someFormControlMetadata = {\n            \"A\" : [\n                {\n                    'key': '001',\n                    'value': 'PICT'\n                },\n                {\n                    'key': '002',\n                    'value': 'MIT'\n                },\n                {\n                    'key': '003',\n                    'value': 'SKNCOE'\n                }\n            ],\n            \"B\" : [\n                {\n                    'key': '001',\n                    'value': 'K J Somaiyya'\n                },\n                {\n                    'key': '002',\n                    'value': 'Father Agnell '\n                },\n                {\n                    'key': '003',\n                    'value': 'D Y Patil'\n                }\n            ],\n            \"C\" : [\n                {\n                    'key': '001',\n                    'value': 'COEP'\n                },\n                {\n                    'key': '002',\n                    'value': 'VIT'\n                },\n                {\n                    'key': '003',\n                    'value': 'Bharati Vidyapeeth'\n                }\n            ]\n        };\n        return someFormControlMetadata[option];\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/app/services/dynamic-form.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/mohsinkhan/Documents/GitHub/angular5-mdui/src/main.ts"],"sourceRoot":"webpack:///"}